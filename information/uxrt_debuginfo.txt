(gdb) b res
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
core::result::Result<T,E>::expect
core::result::Result<T,E>::map_err
core::result::Result<T,E>::unwrap
core::result::unwrap_failed
result.rs
sel4_alloc::vspace::hier::Reservation::res
(gdb) b reserve_at_vaddr 
Breakpoint 1 at 0x40ba67: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1002.
(gdb) b boot
bootinfo.rs                                          sel4::bootinfo::bootinfo_extras
bootinfo_types.h                                     sel4_alloc::bootstrap::bootstrap_allocators
bootstrap.rs                                         sel4_alloc::bootstrap::get_vaddr_range_from_elf_hdr
(gdb) b bootstrap.rs:146
Breakpoint 2 at 0x40669f: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs, line 146.
(gdb) b alloc.rs:160
Breakpoint 3 at 0x40436b: file src/alloc.rs, line 160.
(gdb) b lib.rs:207
Breakpoint 4 at 0x402faa: file src/lib.rs, line 207.
(gdb) b root
root-task.rs           root_task::lang_start  root_task::main        
(gdb) b root-task.rs:216
Breakpoint 5 at 0x40052c: file src/bin/root-task.rs, line 216.
(gdb) b root-task.rs:214
Breakpoint 6 at 0x400521: file src/bin/root-task.rs, line 214.
(gdb) !clear











(gdb) info breakpoints 
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040ba67 in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
2       breakpoint     keep y   0x000000000040669f in sel4_alloc::bootstrap::bootstrap_allocators 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
3       breakpoint     keep y   0x000000000040436b in uxrt_process_server::alloc::MainAlloc::new at src/alloc.rs:160
4       breakpoint     keep y   0x0000000000402faa in uxrt_process_server::main at src/lib.rs:207
5       breakpoint     keep y   0x000000000040052c in root_task::main at src/bin/root-task.rs:216
6       breakpoint     keep y   0x0000000000400521 in root_task::main at src/bin/root-task.rs:214
(gdb) info frame
Stack level 0, frame at 0x8:
 rip = 0xfff0; saved rip = 0x0
 called by frame at 0x0
 Arglist at 0xfffffffffffffff8, args: 
 Locals at 0xfffffffffffffff8, Previous frame's sp is 0x8
 Saved registers:
  rip at 0x0
(gdb) continue
Continuing.

Breakpoint 6, root_task::main () at src/bin/root-task.rs:215
215	    let bootinfo = unsafe { &*BOOTINFO };
(gdb) p boot
bootinfo          bootinfo.rs       bootinfo_types.h  bootstrap.rs      
(gdb) p bootinfo
No symbol 'bootinfo' in current context
(gdb) n

Breakpoint 5, root_task::main () at src/bin/root-task.rs:216
216	    uxrt_process_server::main(bootinfo);
(gdb) p bootinfo
$1 = (sel4_sys::lib_main::seL4_BootInfo *) 0x1657000
(gdb) n

Breakpoint 4, uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
207	        let main_alloc = alloc::MainAlloc::new(bootinfo, mbi_handler.user_start_addr, mbi_handler.user_end_addr);
(gdb) info frame
Stack level 0, frame at 0x645f70:
 rip = 0x402faa in uxrt_process_server::main (src/lib.rs:207); saved rip = 0x400535
 called by frame at 0x645f80
 source language rust.
 Arglist at 0x645e98, args: bootinfo=0x1657000
 Locals at 0x645e98, Previous frame's sp is 0x645f70
 Saved registers:
  rip at 0x645f68
(gdb) bt
#0  uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#1  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) info frame 0
Stack frame at 0x645f70:
 rip = 0x402faa in uxrt_process_server::main (src/lib.rs:207); saved rip = 0x400535
 called by frame at 0x645f80
 source language rust.
 Arglist at 0x645e98, args: bootinfo=0x1657000
 Locals at 0x645e98, Previous frame's sp is 0x645f70
 Saved registers:
  rip at 0x645f68
(gdb) info frame 1
Stack frame at 0x645f80:
 rip = 0x400535 in root_task::main (src/bin/root-task.rs:216); saved rip = 0x400625
 caller of frame at 0x645f70
 source language rust.
 Arglist at 0x645f68, args: 
 Locals at 0x645f68, Previous frame's sp is 0x645f80
 Saved registers:
  rip at 0x645f78
(gdb) s
uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392) at src/alloc.rs:159
159	        unsafe { switch_to_scratch() };
(gdb) bt
#0  uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392) at src/alloc.rs:159
#1  0x0000000000402fc4 in uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#2  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) info frame 0
Stack frame at 0x645ea0:
 rip = 0x404366 in uxrt_process_server::alloc::MainAlloc::new (src/alloc.rs:159); saved rip = 0x402fc4
 called by frame at 0x645f70
 source language rust.
 Arglist at 0x645d38, args: bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392
 Locals at 0x645d38, Previous frame's sp is 0x645ea0
 Saved registers:
  rip at 0x645e98
(gdb) info frame 1
Stack frame at 0x645f70:
 rip = 0x402fc4 in uxrt_process_server::main (src/lib.rs:207); saved rip = 0x400535
 called by frame at 0x645f80, caller of frame at 0x645ea0
 source language rust.
 Arglist at 0x645e98, args: bootinfo=0x1657000
 Locals at 0x645e98, Previous frame's sp is 0x645f70
 Saved registers:
  rip at 0x645f68
(gdb) info frame 2
Stack frame at 0x645f80:
 rip = 0x400535 in root_task::main (src/bin/root-task.rs:216); saved rip = 0x400625
 caller of frame at 0x645f70
 source language rust.
 Arglist at 0x645f68, args: 
 Locals at 0x645f68, Previous frame's sp is 0x645f80
 Saved registers:
  rip at 0x645f78
(gdb) s
uxrt_process_server::alloc::switch_to_scratch () at src/alloc.rs:149
149	    ALLOCATE = scratch_allocate;
(gdb) bt
#0  uxrt_process_server::alloc::switch_to_scratch () at src/alloc.rs:149
#1  0x000000000040436b in uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392)
    at src/alloc.rs:159
#2  0x0000000000402fc4 in uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#3  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) n
150	    DEALLOCATE = scratch_deallocate;
(gdb) n
151	    REALLOCATE = scratch_reallocate;
(gdb) n
uxrt_process_server::alloc::switch_to_scratch () at src/alloc.rs:152
152	}
(gdb) n

Breakpoint 3, uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392)
    at src/alloc.rs:160
160	        let (bump, ut_bucket, hier) = sel4_alloc::bootstrap::bootstrap_allocators(bootinfo, user_start_addr, user_end_addr);
(gdb) bt
#0  uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392) at src/alloc.rs:160
#1  0x0000000000402fc4 in uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#2  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) n

Breakpoint 2, sel4_alloc::bootstrap::bootstrap_allocators (bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
warning: Source file is more recent than executable.
146	        let rsvp = hier.reserve_at_vaddr(vaddrs.start, vaddrs.end - vaddrs.start, &alloc)
(gdb) bt
#0  sel4_alloc::bootstrap::bootstrap_allocators (bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
#1  0x0000000000404387 in uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392)
    at src/alloc.rs:160
#2  0x0000000000402fc4 in uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#3  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) info frame 0
Stack frame at 0x645d40:
 rip = 0x40669f in sel4_alloc::bootstrap::bootstrap_allocators
    (/home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146); saved rip = 0x404387
 called by frame at 0x645ea0
 source language rust.
 Arglist at 0x6455c8, args: bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392
 Locals at 0x6455c8, Previous frame's sp is 0x645d40
 Saved registers:
  rip at 0x645d38
(gdb) info frame 1
Stack frame at 0x645ea0:
 rip = 0x404387 in uxrt_process_server::alloc::MainAlloc::new (src/alloc.rs:160); saved rip = 0x402fc4
 called by frame at 0x645f70, caller of frame at 0x645d40
 source language rust.
 Arglist at 0x645d38, args: bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392
 Locals at 0x645d38, Previous frame's sp is 0x645ea0
 Saved registers:
  rip at 0x645e98
(gdb) info frame 2
Stack frame at 0x645f70:
 rip = 0x402fc4 in uxrt_process_server::main (src/lib.rs:207); saved rip = 0x400535
 called by frame at 0x645f80, caller of frame at 0x645ea0
 source language rust.
 Arglist at 0x645e98, args: bootinfo=0x1657000
 Locals at 0x645e98, Previous frame's sp is 0x645f70
 Saved registers:
  rip at 0x645f68
(gdb) info frame 3
Stack frame at 0x645f80:
 rip = 0x400535 in root_task::main (src/bin/root-task.rs:216); saved rip = 0x400625
 caller of frame at 0x645f70
 source language rust.
 Arglist at 0x645f68, args: 
 Locals at 0x645f68, Previous frame's sp is 0x645f80
 Saved registers:
  rip at 0x645f78
(gdb) n

Breakpoint 1, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19223088)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
1002	        if bytes % 4096 != 0 {
(gdb) bt
#0  <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19223088)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
#1  0x00000000004066f8 in sel4_alloc::bootstrap::bootstrap_allocators (bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
#2  0x0000000000404387 in uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392)
    at src/alloc.rs:160
#3  0x0000000000402fc4 in uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
#4  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) info frame 0
Stack frame at 0x6455d0:
 rip = 0x40ba67 in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
    (/home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002); saved rip = 0x4066f8
 called by frame at 0x645d40
 source language rust.
 Arglist at 0x6451d8, args: self=0x6459a0, vaddr=4194304, bytes=19223088
 Locals at 0x6451d8, Previous frame's sp is 0x6455d0
 Saved registers:
  rip at 0x6455c8
(gdb) info frame 1
Stack frame at 0x645d40:
 rip = 0x4066f8 in sel4_alloc::bootstrap::bootstrap_allocators
    (/home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146); saved rip = 0x404387
 called by frame at 0x645ea0, caller of frame at 0x6455d0
 source language rust.
 Arglist at 0x6455c8, args: bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392
 Locals at 0x6455c8, Previous frame's sp is 0x645d40
 Saved registers:
  rip at 0x645d38
(gdb) info frame 2
Stack frame at 0x645ea0:
 rip = 0x404387 in uxrt_process_server::alloc::MainAlloc::new (src/alloc.rs:160); saved rip = 0x402fc4
 called by frame at 0x645f70, caller of frame at 0x645d40
 source language rust.
 Arglist at 0x645d38, args: bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392
 Locals at 0x645d38, Previous frame's sp is 0x645ea0
 Saved registers:
  rip at 0x645e98
(gdb) info frame 3
Stack frame at 0x645f70:
 rip = 0x402fc4 in uxrt_process_server::main (src/lib.rs:207); saved rip = 0x400535
 called by frame at 0x645f80, caller of frame at 0x645ea0
 source language rust.
 Arglist at 0x645e98, args: bootinfo=0x1657000
 Locals at 0x645e98, Previous frame's sp is 0x645f70
 Saved registers:
  rip at 0x645f68
(gdb) info frame 4
Stack frame at 0x645f80:
 rip = 0x400535 in root_task::main (src/bin/root-task.rs:216); saved rip = 0x400625
 caller of frame at 0x645f70
 source language rust.
 Arglist at 0x645f68, args: 
 Locals at 0x645f68, Previous frame's sp is 0x645f80
 Saved registers:
  rip at 0x645f78
(gdb) n
1003	            bytes += 4096 - bytes % 4096;
(gdb) n
1007	        let vaddr = 4096 * ((vaddr & (!0 >> (BITS as usize - VADDR_BITS as usize))) / 4096);
(gdb) p vaddr
$2 = 4194304
(gdb) s
1008	        let mut all = self.all_blocks.borrow_mut();
(gdb) watch vaddr 
Hardware watchpoint 7: vaddr
(gdb) watch boot
bootinfo          bootinfo.rs       bootinfo_types.h  bootstrap.rs      
(gdb) watch bootinfo
No symbol 'bootinfo' in current context
(gdb) watch bytes
Hardware watchpoint 8: bytes
(gdb) watch sel
Display all 179 possibilities? (y or n)
(gdb) watch self 
Hardware watchpoint 9: self
(gdb) s
core::cell::RefCell<T>::borrow_mut (self=0x6459b0)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:873
873	        self.try_borrow_mut().expect("already borrowed")
(gdb) n
874	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1009
1009	        let mut free = self.free_blocks.borrow_mut();
(gdb) n
1016	            let mut containing = all.upper_bound_mut(Bound::Included(&vaddr));
(gdb) n
1018	            if !containing.get().unwrap().size_link.is_linked() {
(gdb) p !containing.get().unwrap().size_link.is_linked()
Could not find function named 'intrusive_collections::rbtree::CursorMut<sel4_alloc::vspace::hier::AddressOrder>::get'
(gdb) n
1022	            containing.move_next();
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::move_next (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:656
656	        if self.is_null() {
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::is_null (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:619
619	        self.current.is_null()
(gdb) s
intrusive_collections::rbtree::NodePtr::is_null (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:134
134	        self.0.is_null()
(gdb) s
core::ptr::<impl *const T>::is_null (self=0x64a031 <uxrt_process_server::alloc::SCRATCH_HEAP+16424>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:974
974	        (self as *const u8) == null()
(gdb) s
core::ptr::null () at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:214
214	pub const fn null<T>() -> *const T { 0 as *const T }
(gdb) s
core::ptr::<impl *const T>::is_null (self=0x64a031 <uxrt_process_server::alloc::SCRATCH_HEAP+16424>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:975
975	    }
(gdb) s
intrusive_collections::rbtree::NodePtr::is_null (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:135
135	    }
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::is_null (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:620
620	    }
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::move_next (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:659
659	            self.current = unsafe { self.current.next() };
(gdb) s
intrusive_collections::rbtree::NodePtr::next (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:228
228	        if !self.right().is_null() {
(gdb) s
intrusive_collections::rbtree::NodePtr::right (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:183
183	        (*self.0).right.get()
(gdb) s
core::cell::Cell<T>::get (self=0x64a039 <uxrt_process_server::alloc::SCRATCH_HEAP+16432>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:249
249	        unsafe{ *self.value.get() }
(gdb) s
core::cell::UnsafeCell<T>::get (self=0x64a039 <uxrt_process_server::alloc::SCRATCH_HEAP+16432>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:1536
1536	        self as *const UnsafeCell<T> as *const T as *mut T
(gdb) n
core::cell::UnsafeCell<T>::get (self=0x64a039 <uxrt_process_server::alloc::SCRATCH_HEAP+16432>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:1537
1537	    }
(gdb) n
core::cell::Cell<T>::get (self=0x64a039 <uxrt_process_server::alloc::SCRATCH_HEAP+16432>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:250
250	    }
(gdb) n
intrusive_collections::rbtree::NodePtr::right (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:184
184	    }
(gdb) n
intrusive_collections::rbtree::NodePtr::next (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:231
231	            let mut x = self;
(gdb) n
232	            loop {
(gdb) n
233	                if x.parent().is_null() {
(gdb) n
234	                    return NodePtr::null();
(gdb) n
242	    }
(gdb) n
intrusive_collections::rbtree::CursorMut<A>::move_next (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:661
661	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1024
1024	            if let Some(c) = containing.get() {
(gdb) n
1032	            containing.move_prev();
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::move_prev (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:670
670	        if self.is_null() {
(gdb) s
intrusive_collections::rbtree::CursorMut<A>::is_null (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:619
619	        self.current.is_null()
(gdb) s
intrusive_collections::rbtree::NodePtr::is_null (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:134
134	        self.0.is_null()
(gdb) s
core::ptr::<impl *const T>::is_null (self=0x0)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:974
974	        (self as *const u8) == null()
(gdb) s
core::ptr::null () at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:214
214	pub const fn null<T>() -> *const T { 0 as *const T }
(gdb) n
core::ptr::<impl *const T>::is_null (self=0x0)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ptr.rs:975
975	    }
(gdb) n
intrusive_collections::rbtree::NodePtr::is_null (self=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:135
135	    }
(gdb) n
intrusive_collections::rbtree::CursorMut<A>::is_null (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:620
620	    }
(gdb) n
intrusive_collections::rbtree::CursorMut<A>::move_prev (self=0x645410)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:671
671	            self.current = unsafe { self.tree.root.last_child() };
(gdb) n
670	        if self.is_null() {
(gdb) n
675	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1034
1034	            let block = containing.get().unwrap();
(gdb) watch block
No symbol 'block' in current context
(gdb) n
1036	            if block.start_addr.get() == vaddr {
(gdb) p block 
$3 = (sel4_alloc::vspace::hier::ReservationNode *) 0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>
(gdb) n
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) info wa
warranty     watchpoints  
(gdb) info watchpoints 
Num     Type           Disp Enb Address            What
7       hw watchpoint  keep y                      vaddr
8       hw watchpoint  keep y                      bytes
9       hw watchpoint  keep y                      self
(gdb) watch block 
Hardware watchpoint 10: block
(gdb) info watchpoints 
Num     Type           Disp Enb Address            What
7       hw watchpoint  keep y                      vaddr
8       hw watchpoint  keep y                      bytes
9       hw watchpoint  keep y                      self
10      hw watchpoint  keep y                      block
(gdb) n
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) n
1054	                block.num_bytes.set(vaddr - block.start_addr.get());
(gdb) p newblock 
$4 = intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode> {ptr: core::ptr::NonNull<sel4_alloc::vspace::hier::ReservationNode> {pointer: 0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>}}
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1056	                    opt_leftover = Some(newblock.split(bytes));
(gdb) n
1057	                    newblock.num_bytes.set(bytes);
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1062	                new = newblock.clone();
(gdb) n
1063	                opt_newblock = Some(newblock);
(gdb) n
No frame is currently executing in specified block
0x000000000040c467 in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, 
    bytes=19226624) at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1063
1063	                opt_newblock = Some(newblock);
(gdb) info watchpoints 
Num     Type           Disp Enb Address            What
7       hw watchpoint  keep y                      vaddr
8       hw watchpoint  keep y                      bytes
9       hw watchpoint  keep y                      self
10      hw watchpoint  keep y                      block
(gdb) n
No frame is currently executing in specified block
Command aborted.
(gdb) n
No frame is currently executing in specified block
Command aborted.
(gdb) info breakpoints 
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040ba67 in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
	breakpoint already hit 1 time
2       breakpoint     keep y   0x000000000040669f in sel4_alloc::bootstrap::bootstrap_allocators 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
	breakpoint already hit 1 time
3       breakpoint     keep y   0x000000000040436b in uxrt_process_server::alloc::MainAlloc::new at src/alloc.rs:160
	breakpoint already hit 1 time
4       breakpoint     keep y   0x0000000000402faa in uxrt_process_server::main at src/lib.rs:207
	breakpoint already hit 1 time
5       breakpoint     keep y   0x000000000040052c in root_task::main at src/bin/root-task.rs:216
	breakpoint already hit 1 time
6       breakpoint     keep y   0x0000000000400521 in root_task::main at src/bin/root-task.rs:214
	breakpoint already hit 1 time
7       hw watchpoint  keep y                      vaddr
8       hw watchpoint  keep y                      bytes
9       hw watchpoint  keep y                      self
10      hw watchpoint  keep y                      block
(gdb) b hier.rs:1066
Breakpoint 11 at 0x40c46b: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1066.
(gdb) n
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) c
Continuing.
No frame is currently executing in specified block
Command aborted.
(gdb) n
No frame is currently executing in specified block
Command aborted.
(gdb) s
No frame is currently executing in specified block
Command aborted.
(gdb) 

Bootinfo.untypedLists:
 sel4_sys::lib_main::seL4_UntypedDesc {paddr: 1048576, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 2097152, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4194304, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 50331648, padding1: 0, padding2: 0, sizeBits: 24, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 67108864, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 134217728, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 268435456, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 402653184, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 469762048, padding1: 0, padding2: 0, sizeBits: 25, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 503316480, padding1: 0, padding2: 0, sizeBits: 24, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 520093696, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 0}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 528482304, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 532676608, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 534773760, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 535822336, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536346624, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536608768, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29788160, padding1: 0, padding2: 0, sizeBits: 11, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29790208, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29794304, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29802496, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29818880, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29884416, padding1: 0, padding2: 0, size---Type <return> to continue, or q <return> to quit---
Bits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 30408704, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 31457280, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 32505856, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33030144, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33292288, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33423360, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33456128, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33472512, padding1: 0, padding2: 0, sizeBits: 10, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33473536, padding1: 0, padding2: 0, sizeBits: 9, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 0, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536739840, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536870912, padding1: 0, padding2: 0, sizeBits: 29, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 1073741824, padding1: 0, padding2: 0, sizeBits: 30, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 2147483648, padding1: 0, padding2: 0, sizeBits: 30, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 3221225472, padding1: 0, padding2: 0, sizeBits: 29, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 3758096384, padding1: 0, padding2: 0, sizeBits: 28, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4026531840, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4160749568, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4227858432, padding1: 0, padding2: 0, sizeBits: 25, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4261412864, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4269801472, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4273999872, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274003968, padding1: 0, padding2: 0, si---Type <return> to continue, or q <return> to quit---
zeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274012160, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274028544, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274061312, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274126848, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274257920, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274520064, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4275044352, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276097024, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276101120, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276109312, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276125696, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276158464, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276224000, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276355072, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276617216, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4277141504, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4278190080, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4286578688, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4290772992, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4292870144, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4293918720, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294443008, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294705152, padding1: 0, padding2: 0, si---Type <return> to continue, or q <return> to quit---
zeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294836224, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294901760, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294934528, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294950912, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294959104, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294963200, padding1: 0, padding2: 0, sizeBits: 11, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294965248, padding1: 0, padding2: 0, sizeBits: 10, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966272, padding1: 0, padding2: 0, sizeBits: 9, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966784, padding1: 0, padding2: 0, sizeBits: 8, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967040, padding1: 0, padding2: 0, sizeBits: 7, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967168, padding1: 0, padding2: 0, sizeBits: 6, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967232, padding1: 0, padding2: 0, sizeBits: 5, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967264, padding1: 0, padding2: 0, sizeBits: 4, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967296, padding1: 0, padding2: 0, sizeBits: 32, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 8589934592, padding1: 0, padding2: 0, sizeBits: 33, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 17179869184, padding1: 0, padding2: 0, sizeBits: 34, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 34359738368, padding1: 0, padding2: 0, sizeBits: 35, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 68719476736, padding1: 0, padding2: 0, sizeBits: 36, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 137438953472, padding1: 0, padding2: 0, sizeBits: 37, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 274877906944, padding1: 0, padding2: 0, sizeBits: 38, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 549755813888, padding1: 0, padding2: 0, sizeBits: 46, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 70918499991552, padding1: 0, padding2: 0, sizeBits: 45, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 106102872080384, padding1: 0, padding2: ---Type <return> to continue, or q <return> to quit---
0, sizeBits: 44, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 123695058124800, padding1: 0, padding2: 0, sizeBits: 43, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 132491151147008, padding1: 0, padding2: 0, sizeBits: 42, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 136889197658112, padding1: 0, padding2: 0, sizeBits: 41, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 139088220913664, padding1: 0, padding2: 0, sizeBits: 40, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 140187732541440, padding1: 0, padding2: 0, sizeBits: 39, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 0, padding1: 0, padding2: 0, sizeBits: 0, isDevice: 0} <repeats 133 times>]
(gdb) 
(gdb) 


*******************************
 Saved registers:
  rip at 0x6455c8
(gdb) n
1008	        let mut all = self.all_blocks.borrow_mut();
(gdb) p al
align
all_blocks
alloc
alloc.rs
alloc::alloc
alloc::alloc::Global
alloc::alloc::alloc
alloc::alloc::alloc_zeroed
alloc::alloc::exchange_malloc
alloc::alloc::handle_alloc_error
alloc::alloc::{{impl}}
alloc::boxed
alloc::boxed::Box<T>::into_raw
alloc::boxed::Box<T>::into_raw_non_null
alloc::boxed::Box<T>::into_unique
alloc::boxed::{{impl}}
alloc::collections
alloc::collections::CollectionAllocErr
alloc::collections::CollectionAllocErr::AllocErr
alloc::collections::CollectionAllocErr::CapacityOverflow
alloc::raw_vec
alloc::raw_vec::RawVec<sel4_alloc::object_queue::Object<usize>, alloc::alloc::Global>
alloc::raw_vec::RawVec<usize, alloc::alloc::Global>
alloc::vec
alloc::vec::SetLenOnDrop
alloc::vec::Vec<sel4_alloc::object_queue::Object<usize>>
alloc::vec::Vec<usize>
(gdb) p all_blocks 
No symbol 'all_blocks' in current context
(gdb) !clear

(gdb) n
1009	        let mut free = self.free_blocks.borrow_mut();
(gdb) n
1016	            let mut containing = all.upper_bound_mut(Bound::Included(&vaddr));
(gdb) n
1018	            if !containing.get().unwrap().size_link.is_linked() {
(gdb) n
1022	            containing.move_next();
(gdb) n
1024	            if let Some(c) = containing.get() {
(gdb) n
1032	            containing.move_prev();
(gdb) n
1034	            let block = containing.get().unwrap();
(gdb) p block
No symbol 'block' in current context
(gdb) n
1036	            if block.start_addr.get() == vaddr {
(gdb) p block 
$1 = (sel4_alloc::vspace::hier::ReservationNode *) 0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>
(gdb) n
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) n
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) n
1054	                block.num_bytes.set(vaddr - block.start_addr.get());
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1056	                    opt_leftover = Some(newblock.split(bytes));
(gdb) n
1057	                    newblock.num_bytes.set(bytes);
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) p bytes
$2 = 19226624
(gdb) n
1062	                new = newblock.clone();
(gdb) p new
$3 = intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode> {ptr: core::ptr::NonNull<sel4_alloc::vspace::hier::ReservationNode> {pointer: 0x410aaa <core::cell::Cell<T>::set+42>}}
(gdb) p opt
opt_leftover  opt_newblock  option.rs     
(gdb) p opt_newblock 
$4 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) p &opt_newblock 
$5 = (core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>> *) 0x645408
(gdb) p *opt_newblock 
Attempt to take contents of a non-pointer value.
(gdb) p newblock 
$6 = intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode> {ptr: core::ptr::NonNull<sel4_alloc::vspace::hier::ReservationNode> {pointer: 0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>}}
(gdb) n
1063	                opt_newblock = Some(newblock);
(gdb) p opt_newblock 
$7 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) n
1067	        if let Some(newblock) = opt_newblock {
(gdb) p all
$8 = core::cell::RefMut<intrusive_collections::rbtree::RBTree<sel4_alloc::vspace::hier::AddressOrder>> {value: 0x6459b8, borrow: core::cell::BorrowRefMut {borrow: 0x6459b0}}
(gdb) n
1068	            all.insert(newblock);
(gdb) n
q



*********************************


(gdb) bt
#0  0x000000000000fff0 in ?? ()
#1  0x0000000000000000 in ?? ()
(gdb) !clear











(gdb) break root-task.rs:
<&mut W as core::fmt::Write>::write_char
<&mut W as core::fmt::Write>::write_fmt
<&mut W as core::fmt::Write>::write_str
__sel4_start_init_boot_info
core::char::convert::from_u32_unchecked
core::char::methods::<impl char>::encode_utf8
core::char::methods::<impl char>::len_utf8
core::fmt::Arguments::new_v1
core::fmt::Write::write_char
core::fmt::Write::write_fmt
core::ptr::real_drop_in_place
core::str::from_utf8_unchecked_mut
root_task::lang_start
root_task::main
(gdb) break root-task.rs:216
Breakpoint 1 at 0x40052c: file src/bin/root-task.rs, line 216.
(gdb) break lib
lib.rs                                                       libsel4/include/sel4/shared_types_gen.h
lib_main.rs                                                  libsel4/sel4_arch_include/x86_64/sel4/sel4_arch/types_gen.h
libsel4/include/interfaces/sel4_client.h                     
(gdb) break lib.rs:207
Breakpoint 2 at 0x402faa: file src/lib.rs, line 207.
(gdb) b alloc.rs:160
Breakpoint 3 at 0x40436b: file src/alloc.rs, line 160.
(gdb) b bootstrap.rs:146
Breakpoint 4 at 0x40669f: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs, line 146.
(gdb) b hier.rs:1003
Breakpoint 5 at 0x40ba8b: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1003.
(gdb) b res
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
core::result::Result<T,E>::expect
core::result::Result<T,E>::map_err
core::result::Result<T,E>::unwrap
core::result::unwrap_failed
result.rs
sel4_alloc::vspace::hier::Reservation::res
(gdb) b reserve_at_vaddr 
Breakpoint 6 at 0x40ba67: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1002.
(gdb) info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040052c in root_task::main 
                                                   at src/bin/root-task.rs:216
2       breakpoint     keep y   0x0000000000402faa in uxrt_process_server::main at src/lib.rs:207
3       breakpoint     keep y   0x000000000040436b in uxrt_process_server::alloc::MainAlloc::new at src/alloc.rs:160
4       breakpoint     keep y   0x000000000040669f in sel4_alloc::bootstrap::bootstrap_allocators 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
5       breakpoint     keep y   0x000000000040ba8b in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr 
                                                   at /home/aditya/uxrt-toplevel---Type <return> to continue, or q <return> to quit---
/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1003
6       breakpoint     keep y   0x000000000040ba67 in <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr 
                                                   at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
(gdb) b hier.rs:1012
Breakpoint 7 at 0x40bc07: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1012.
(gdb) b hier.rs:1018
Breakpoint 8 at 0x40bc65: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1018.
(gdb) b hier.rs:1024
Breakpoint 9 at 0x40bd02: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1024.
(gdb) b hier.rs:1025
Breakpoint 10 at 0x40bd43: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1025.
(gdb) b hier.rs:1036
Breakpoint 11 at 0x40bde2: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1036.
(gdb) b hier.rs:1040
Breakpoint 12 at 0x40be10: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1040.
(gdb) b hier.1043
Function "hier.1043" not defined.
Make breakpoint pending on future shared library load? (y or [n]) n
(gdb) b hier.rs:1043
Breakpoint 13 at 0x40be9c: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1043.
(gdb) b hier.rs:1049
Breakpoint 14 at 0x40be2a: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1049.
(gdb) b hier.rs:1055
Breakpoint 15 at 0x40c1c8: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1055.
(gdb) b hier.rs:1058
Breakpoint 16 at 0x40c21e: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1058.
(gdb) b hier.rs:1067
Breakpoint 17 at 0x40c46b: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1067.
(gdb) b hier.rs:1071
Breakpoint 18 at 0x40c4c7: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1071.
(gdb) b hier.rs:1076
Breakpoint 19 at 0x40c564: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1076.
(gdb) continue 
Continuing.

Breakpoint 1, root_task::main () at src/bin/root-task.rs:216
216	    uxrt_process_server::main(bootinfo);
(gdb) p bootinfo
$1 = (sel4_sys::lib_main::seL4_BootInfo *) 0x1657000
(gdb) list
211	    &[0; CHILD_STACK_SIZE];
212	        
213	#[cfg(feature = "RawMain")]
214	fn main() {
215	    let bootinfo = unsafe { &*BOOTINFO };
216	    uxrt_process_server::main(bootinfo);
217	}
218	        
219	
220	#[cfg(not(feature = "RawMain"))]
(gdb) n

Breakpoint 2, uxrt_process_server::main (bootinfo=0x1657000) at src/lib.rs:207
warning: Source file is more recent than executable.
207	        let main_alloc = alloc::MainAlloc::new(bootinfo, mbi_handler.user_start_addr, mbi_handler.user_end_addr);
(gdb) p main_alloc
No symbol 'main_alloc' in current context
(gdb) p mbi
mbi          mbi_handler  mbi_paddr    mbi_vaddr    
(gdb) p mbi_handler.user_start_addr 
$2 = 4194304
(gdb) p mbi_handler.user_end_addr 
$3 = 23417392
(gdb) n

Breakpoint 3, uxrt_process_server::alloc::MainAlloc::new (bootinfo=0x1657000, user_start_addr=4194304, user_end_addr=23417392)
    at src/alloc.rs:160
160	        let (bump, ut_bucket, hier) = sel4_alloc::bootstrap::bootstrap_allocators(bootinfo, user_start_addr, user_end_addr);
(gdb) n

Breakpoint 4, sel4_alloc::bootstrap::bootstrap_allocators (bi=0x1657000, user_start_vaddr=4194304, user_end_vaddr=23417392)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:146
146	        let rsvp = hier.reserve_at_vaddr(vaddrs.start, vaddrs.end - vaddrs.start, &alloc)
(gdb) s

Breakpoint 6, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19223088)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1002
1002	        if bytes % 4096 != 0 {
(gdb) n

Breakpoint 5, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19223088)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1003
1003	            bytes += 4096 - bytes % 4096;
(gdb) n
1007	        let vaddr = 4096 * ((vaddr & (!0 >> (BITS as usize - VADDR_BITS as usize))) / 4096);
(gdb) n
1008	        let mut all = self.all_blocks.borrow_mut();
(gdb) n
1009	        let mut free = self.free_blocks.borrow_mut();
(gdb) n

Breakpoint 7, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1016
1016	            let mut containing = all.upper_bound_mut(Bound::Included(&vaddr));
(gdb) p opt_leftover 
$4 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) p opt_newblock 
$5 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) n

Breakpoint 8, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1018
1018	            if !containing.get().unwrap().size_link.is_linked() {
(gdb) n
1022	            containing.move_next();
(gdb) n

Breakpoint 9, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1024
1024	            if let Some(c) = containing.get() {
(gdb) n
1032	            containing.move_prev();
(gdb) n
1034	            let block = containing.get().unwrap();
(gdb) n

Breakpoint 11, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1036
1036	            if block.start_addr.get() == vaddr {
(gdb) p block.s
size_link   start_addr  
(gdb) p block.start_addr
$6 = core::cell::Cell<usize> {value: core::cell::UnsafeCell<usize> {value: 0}}
(gdb) p block.start_addr.get()
Could not find function named 'core::cell::Cell<usize>::get'
(gdb) s
core::cell::Cell<T>::get (
    self=0x64a029 <uxrt_process_server::alloc::SCRATCH_HEAP+16416>)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:249
249	        unsafe{ *self.value.get() }
(gdb) n
250	    }
(gdb) n

Breakpoint 14, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1053
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) n
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) p newblock
No symbol 'newblock' in current context
(gdb) s
sel4_alloc::vspace::hier::ReservationNode::split (
    self=0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>, 
    num_bytes_to_take=4194304)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:394
394	            num_bytes: Cell::new(self.num_bytes.get() - num_bytes_to_take),
(gdb) n
395	            start_addr: Cell::new(self.start_addr.get() + num_bytes_to_take),
(gdb) n
396	            address_link: Default::default(),
(gdb) n
397	            size_link: Default::default(),
(gdb) n
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) n
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) c
Continuing.

Breakpoint 15, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1055
1055	                if newblock.num_bytes.get() > bytes {
(gdb) p new
new       newblock  
(gdb) p newblock 
$7 = intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode> {ptr: core::ptr::NonNull<sel4_alloc::vspace::hier::ReservationNode> {pointer: 0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>}}
(gdb) n
1056	                    opt_leftover = Some(newblock.split(bytes));
(gdb) p opt
opt_leftover  opt_newblock  option.rs     
(gdb) p opt_leftover 
$8 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) p *opt_leftover 
Attempt to take contents of a non-pointer value.
(gdb) p &opt_leftover 
$9 = (core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>> *) 0x645400
(gdb) n
1057	                    newblock.num_bytes.set(bytes);
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1062	                new = newblock.clone();
(gdb) s
<intrusive_collections::unsafe_ref::UnsafeRef<T> as core::clone::Clone>::clone
    (self=0x645500)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/unsafe_ref.rs:97
97	        UnsafeRef { ptr: self.ptr }
(gdb) n
98	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
    (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1063
1063	                opt_newblock = Some(newblock);
(gdb) p opt_newblock 
$10 = core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>>
(gdb) p &opt_newblock 
$11 = (core::option::Option<intrusive_collections::unsafe_ref::UnsafeRef<sel4_alloc::vspace::hier::ReservationNode>> *) 0x645408
(gdb) n

Breakpoint 17, <sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1067
1067	        if let Some(newblock) = opt_newblock {
(gdb) n
1068	            all.insert(newblock);
(gdb) s
<core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut (
    self=0x6453d8)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:1396
1396	        self.value
(gdb) b cell
cell.rs
core::cell::BorrowRefMut::new
core::cell::Cell<T>::get
core::cell::Cell<T>::new
core::cell::Cell<T>::replace
core::cell::Cell<T>::set
core::cell::RefCell<T>::borrow_mut
core::cell::RefCell<T>::new
core::cell::RefCell<T>::try_borrow_mut
core::cell::UnsafeCell<T>::get
core::cell::UnsafeCell<T>::new
(gdb) b cell.rs:1396
Breakpoint 20 at 0x410f25: cell.rs:1396. (2 locations)
(gdb) p self.value 
$12 = (intrusive_collections::rbtree::RBTree<sel4_alloc::vspace::hier::AddressOrder> *) 0x6459b8
(gdb) s
<core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut (
    self=0x6453d8)
    at /home/aditya/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cell.rs:1397
1397	    }
(gdb) s
intrusive_collections::rbtree::RBTree<A>::insert (self=0x6459b8, val=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:1235
1235	            let raw = &*val as *const _;
(gdb) list
1230	    pub fn insert<'a>(&'a mut self, val: A::Pointer) -> CursorMut<A>
1231	    where
1232	        <A as KeyAdapter<'a>>::Key: Ord,
1233	    {
1234	        unsafe {
1235	            let raw = &*val as *const _;
1236	            let new = self.node_from_value(val);
1237	            if self.is_empty() {
1238	                self.insert_root(new);
1239	            } else {
(gdb) p raw
No symbol 'raw' in current context
(gdb) n
1236	            let new = self.node_from_value(val);
(gdb) p r
range.rs               rlibc                  root_task::RUN_ONCE
raw                    root                   root_task::lang_start
rbtree.rs              root-task.rs           root_task::main
result.rs              root_task              rust_begin_unwind
right                  root_task::BOOTINFO    rust_oom
(gdb) p ra
range.rs  raw       
(gdb) p raw
$13 = (sel4_alloc::vspace::hier::ReservationNode *) 0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>
(gdb) n
1237	            if self.is_empty() {
(gdb) p new 
$14 = intrusive_collections::rbtree::NodePtr (0x64a071 <uxrt_process_server::alloc::SCRATCH_HEAP+16488>)
(gdb) n
1240	                let key = self.adapter.get_key(&*raw);
(gdb) n
1241	                let mut tree = self.root;
(gdb) p key 
$15 = 4194304
(gdb) n
1243	                    let current = &*self.adapter.get_value(tree.0);
(gdb) p tree 
$16 = intrusive_collections::rbtree::NodePtr (0x64a031 <uxrt_process_server::alloc::SCRATCH_HEAP+16424>)
(gdb) n
1244	                    if key < self.adapter.get_key(current) {
(gdb) p current 
$17 = (sel4_alloc::vspace::hier::ReservationNode *) 0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>
(gdb) n
1252	                        if tree.right().is_null() {
(gdb) n
1252	                        if tree.right().is_null() {
(gdb) p tree 
$18 = intrusive_collections::rbtree::NodePtr (0x64a031 <uxrt_process_server::alloc::SCRATCH_HEAP+16424>)
(gdb) n
1253	                            tree.insert_right(new, &mut self.root);
(gdb) p new 
$19 = intrusive_collections::rbtree::NodePtr (0x64a071 <uxrt_process_server::alloc::SCRATCH_HEAP+16488>)
(gdb) n
^C
Program received signal SIGINT, Interrupt.
0xffffffff80805971 in ?? ()
(gdb) s
Cannot find bounds of current function



*******************************************
(gdb) bt
#0  0x000000000000fff0 in ?? ()
#1  0x0000000000000000 in ?? ()
(gdb) !clear




















(gdb) break root
root-task.rs           root_task::lang_start  root_task::main
(gdb) break root-task.rs:216
Breakpoint 1 at 0x40052c: file src/bin/root-task.rs, line 216.
(gdb) break hier.rs:167
Breakpoint 2 at 0x40f1f6: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 167.
(gdb) break hier.rs:176
Breakpoint 3 at 0x40b469: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 176.
(gdb) break hier.rs:219
Breakpoint 4 at 0x40f33b: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 219.
(gdb) break hier.rs:222
Note: breakpoint 4 also set at pc 0x40f33b.
Breakpoint 5 at 0x40f33b: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 222.
(gdb) break hier.rs:391
Breakpoint 6 at 0x40f8f1: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 391.
(gdb) break hier.rs:402
Breakpoint 7 at 0x40fa69: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 402.
(gdb) break hier.rs:413
Breakpoint 8 at 0x40face: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 413.
(gdb) break hier.rs:420
Breakpoint 9 at 0x40fafe: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 420.
(gdb) break hier.rs:434
Breakpoint 10 at 0x409969: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 434.
(gdb) break hier.rs:548
Note: breakpoint 10 also set at pc 0x409969.
Breakpoint 11 at 0x409969: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 548.
(gdb) break hier.rs:571
Note: breakpoints 10 and 11 also set at pc 0x409969.
Breakpoint 12 at 0x409969: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 571.
(gdb) break hier.rs:835
Breakpoint 13 at 0x40fd79: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 835.
(gdb) break hier.rs:841
Breakpoint 14 at 0x40fda9: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 841.
(gdb) break hier.rs:860
Breakpoint 15 at 0x40c6ce: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 860.
(gdb) break hier.rs:916
Note: breakpoint 15 also set at pc 0x40c6ce.
Breakpoint 16 at 0x40c6ce: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 916.
(gdb) c
Continuing.

Breakpoint 1, root_task::main () at src/bin/root-task.rs:216
216	    uxrt_process_server::main(bootinfo);
(gdb) c
Continuing.

Breakpoint 10, sel4_alloc::vspace::hier::Hier::new (alloc=0x6458b8, vspace=...)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:573
573	        let nl = new_level(alloc, 0, vspace);
(gdb) n

Breakpoint 3, sel4_alloc::vspace::hier::new_level (alloc=0x6458b8, depth=0, 
    table_cap=...)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:180
180	        Some(cap) => cptr = cap,
(gdb) n
179	    match table_cap {
(gdb) n
197	                LevelNode::total_size(HIER_LEVELS[depth as usize].2),
(gdb) p cptr 
$1 = 3
(gdb) p alloc
$2 = ((sel4_alloc::cspace::bump::BumpAllocator, sel4_alloc::utspace::UtBucket, sel4_alloc::dummy::DummyAlloc) *) 0x6458b8
(gdb) n

Breakpoint 4, sel4_alloc::vspace::hier::LevelNode::total_size (log2_size=9)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:223
223	        let mut sz = 0;
(gdb) p usize 
Attempt to use a type name as an expression
(gdb) n
224	        sz += mem::size_of::<LevelNode>();
(gdb) p sz
$3 = 0
(gdb) n
225	        sz += mem::align_of::<LevelEntry>() - sz % mem::align_of::<LevelEntry>();
(gdb) p sz
$4 = 16
(gdb) p usize 
Attempt to use a type name as an expression
(gdb) n
226	        sz += (1 << log2_size as usize) * mem::size_of::<LevelEntry>();
(gdb) p sz
$5 = 24
(gdb) n
227	        sz
(gdb) p sz
$6 = 16408
(gdb) p usize 
Attempt to use a type name as an expression
(gdb) n
228	    }
(gdb) n
sel4_alloc::vspace::hier::new_level (alloc=0x6458b8, depth=0, table_cap=...)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:198
198	                mem::align_of::<LevelNode>(),
(gdb) n
196	            Layout::from_size_align(
(gdb) n
195	        Global.alloc_zeroed(
(gdb) n
203	    assert!(!ptr.is_null());
(gdb) n
205	    let obj = unsafe { &mut *(ptr as *mut LevelNode) };
(gdb) n
206	    obj.table_cap = cptr;
(gdb) p cptr 
$7 = 3
(gdb) p obj.
depth      log2_size  table_cap  
(gdb) p obj.
depth      log2_size  table_cap  
(gdb) p obj.table_cap 
$8 = 0
(gdb) n
207	    obj.depth = depth;
(gdb) p obj.table_cap 
$9 = 3
(gdb) n
208	    obj.log2_size = HIER_LEVELS[depth as usize].2;
(gdb) p obj.depth 
$10 = 0
(gdb) p depth 
$11 = 0
(gdb) n
210	    let tb = obj.get_table_pointer();
(gdb) p obj.log2_size 
$12 = 9
(gdb) p usize 
Attempt to use a type name as an expression
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) p tb
$13 = (sel4_alloc::vspace::hier::LevelEntry *) 0x646020 <uxrt_process_server::alloc::SCRATCH_HEAP+23>
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) p i
No symbol 'i' in current context
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) p i
$14 = 1
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) p i
$15 = 15
(gdb) p i
$16 = 15
(gdb) p i
$17 = 15
(gdb) p i
$18 = 15
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) p i
$19 = 46
(gdb) 
$20 = 46
(gdb) n
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }

(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) p i
$21 = 293
(gdb) n
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }

(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }

(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }

(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 

213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
213	        unsafe { *tb.offset(i) = LevelEntry::Free }
(gdb) 
212	    for i in 0..1 << obj.log2_size {
(gdb) 
216	    unsafe { &*(obj as *const LevelNode) }
(gdb) 
217	}
(gdb) 
sel4_alloc::vspace::hier::Hier::new (alloc=0x6458b8, vspace=...)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:574
574	        let hier = Hier::from_toplevel(nl as *const LevelNode as *mut LevelNode);
(gdb) 
575	        hier.init_block_lists();
(gdb) 
576	        hier
(gdb) 
577	    }
(gdb) 
sel4_alloc::bootstrap::bootstrap_allocators (bi=0x1657000, 
    user_start_vaddr=4194304, user_end_vaddr=23417392)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/bootstrap.rs:145
145	    if let Some((cptrs, vaddrs)) = bi.existing_mappings(user_start_vaddr, user_end_vaddr) {
(gdb) 
146	        let rsvp = hier.reserve_at_vaddr(vaddrs.start, vaddrs.end - vaddrs.start, &alloc)
(gdb) 

Breakpoint 9, <sel4_alloc::vspace::hier::AddressOrder as intrusive_collections::key_adapter::KeyAdapter>::get_key (self=0x6459b8, 
    container=0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:423
423	        container.start_addr.get()
(gdb) 
424	    }
(gdb) 

intrusive_collections::rbtree::RBTree<A>::upper_bound_internal (self=0x6459b8, 
    bound=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:1175
1175	            let cond = match bound {
(gdb) 
1180	            if cond {
(gdb) 
1183	                result = tree;
(gdb) 
1184	                tree = unsafe { tree.right() };
(gdb) 
1184	                tree = unsafe { tree.right() };
(gdb) 
1173	        while !tree.is_null() {
(gdb) 
1173	        while !tree.is_null() {
(gdb) 
1187	        result
(gdb) 
1188	    }
(gdb) 
intrusive_collections::rbtree::RBTree<A>::upper_bound_mut (self=0x6459b8, 
    bound=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:1214
1214	            tree: self,
(gdb) 
1212	        CursorMut {
(gdb) 
1216	    }
(gdb) 
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
    (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1018
1018	            if !containing.get().unwrap().size_link.is_linked() {
(gdb) 

1022	            containing.move_next();
(gdb) 
1024	            if let Some(c) = containing.get() {
(gdb) 
1032	            containing.move_prev();
(gdb) 
1034	            let block = containing.get().unwrap();
(gdb) 
1036	            if block.start_addr.get() == vaddr {
(gdb) 
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) 
1053	                let newblock = block.split(vaddr - block.start_addr.get());
(gdb) 

Breakpoint 6, sel4_alloc::vspace::hier::ReservationNode::split (
    self=0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>, 
    num_bytes_to_take=4194304)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:394
394	            num_bytes: Cell::new(self.num_bytes.get() - num_bytes_to_take),
(gdb) 
395	            start_addr: Cell::new(self.start_addr.get() + num_bytes_to_take),
(gdb) 
396	            address_link: Default::default(),
(gdb) 
397	            size_link: Default::default(),
(gdb) 
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) 
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) 
399	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
    (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1054
1054	                block.num_bytes.set(vaddr - block.start_addr.get());
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1056	                    opt_leftover = Some(newblock.split(bytes));
(gdb) b
Breakpoint 17 at 0x40c207: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1056.
(gdb) 
Note: breakpoint 17 also set at pc 0x40c207.
Breakpoint 18 at 0x40c207: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs, line 1056.
(gdb) n

Breakpoint 6, sel4_alloc::vspace::hier::ReservationNode::split (
    self=0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>, 
    num_bytes_to_take=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:394
394	            num_bytes: Cell::new(self.num_bytes.get() - num_bytes_to_take),
(gdb) n
395	            start_addr: Cell::new(self.start_addr.get() + num_bytes_to_take),
(gdb) n
396	            address_link: Default::default(),
(gdb) n
397	            size_link: Default::default(),
(gdb) n
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) n
393	        UnsafeRef::from_box(Box::new(ReservationNode {
(gdb) n
399	    }
(gdb) n
<sel4_alloc::vspace::hier::Hier as sel4_alloc::VSpaceManager>::reserve_at_vaddr
    (self=0x6459a0, vaddr=4194304, bytes=19226624)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:1057
1057	                    newblock.num_bytes.set(bytes);
(gdb) n
1055	                if newblock.num_bytes.get() > bytes {
(gdb) n
1062	                new = newblock.clone();
(gdb) n
1063	                opt_newblock = Some(newblock);
(gdb) n
1067	        if let Some(newblock) = opt_newblock {
(gdb) n
3	<::core::macros::writeln macros>: No such file or directory.
(gdb) n
1069	            all.insert(newblock);
(gdb) n

Breakpoint 9, <sel4_alloc::vspace::hier::AddressOrder as intrusive_collections::key_adapter::KeyAdapter>::get_key (self=0x6459b8, 
    container=0x64a061 <uxrt_process_server::alloc::SCRATCH_HEAP+16472>)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:423
423	        container.start_addr.get()
(gdb) n
424	    }
(gdb) n
intrusive_collections::rbtree::RBTree<A>::insert (self=0x6459b8, val=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:1241
1241	                let mut tree = self.root;
(gdb) n
1243	                    let current = &*self.adapter.get_value(tree.0);
(gdb) n
1244	                    if key < self.adapter.get_key(current) {
(gdb) n

Breakpoint 9, <sel4_alloc::vspace::hier::AddressOrder as intrusive_collections::key_adapter::KeyAdapter>::get_key (self=0x6459b8, 
    container=0x64a021 <uxrt_process_server::alloc::SCRATCH_HEAP+16408>)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/sel4-alloc/src/vspace/hier.rs:423
423	        container.start_addr.get()
(gdb) n
424	    }
(gdb) n
intrusive_collections::rbtree::RBTree<A>::insert (self=0x6459b8, val=...)
    at /home/aditya/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.7.8/src/rbtree.rs:1252
1252	                        if tree.right().is_null() {
(gdb) n
1252	                        if tree.right().is_null() {
(gdb) n
1253	                            tree.insert_right(new, &mut self.root);
(gdb) n
 



********************************************\
UX/RT booting information:
********************************************\
Boot config: parsing cmdline '/boot/generic/kernel'
Boot config: console_port = 0x3f8
Boot config: debug_port = 0x3f8
Boot config: disable_iommu = false
	Physical Memory Region from 0 size 9fc00 type 1
	Physical Memory Region from 9fc00 size 400 type 2
	Physical Memory Region from f0000 size 10000 type 2
	Physical Memory Region from 100000 size 1fee0000 type 1
Adding physical memory region 0x100000-0x1ffe0000
	Physical Memory Region from 1ffe0000 size 20000 type 2
	Physical Memory Region from fffc0000 size 40000 type 2
  module #0 (preloaded): start=0xa12000 end=0x1a58058 size=0x1046058 name='/boot/generic/proc'
  module #1: start=0x1c65000 end=0x1c6502b size=0x2b name='/test.txt'
  FS image: start=0x10d000 end=0x1c67000 size=0x1b5a000 cmdline='/uxrt.boot'
Detected 2 boot module(s)
ACPI: RSDP paddr=0xf68c0
ACPI: RSDP vaddr=0xf68c0
ACPI: RSDT paddr=0x1ffe15fc
ACPI: RSDT vaddr=0x1ffe15fc
Kernel loaded to: start=0x100000 end=0xa11000 size=0x911000 entry=0x11123e
ACPI: RSDT paddr=0x1ffe15fc
ACPI: RSDT vaddr=0x1ffe15fc
ACPI: FADT paddr=0x1ffe1458
ACPI: FADT vaddr=0x1ffe1458
ACPI: FADT flags=0x80a5
ACPI: MADT paddr=0x1ffe154c
ACPI: MADT vaddr=0x1ffe154c
ACPI: MADT apic_addr=0xfee00000
ACPI: MADT flags=0x1
ACPI: MADT_APIC apic_id=0x0
ACPI: MADT_IOAPIC ioapic_id=0 ioapic_addr=0xfec00000 gsib=0
ACPI: MADT_ISO bus=0 source=0 gsi=2 flags=0x0
ACPI: MADT_ISO bus=0 source=5 gsi=5 flags=0xd
ACPI: MADT_ISO bus=0 source=9 gsi=9 flags=0xd
ACPI: MADT_ISO bus=0 source=10 gsi=10 flags=0xd
ACPI: MADT_ISO bus=0 source=11 gsi=11 flags=0xd
ACPI: 1 CPU(s) detected
Setting up root task memory regions:
size=0x1256000 v_entry=0x4001c0 v_start=0x400000 v_end=0x1656000 p_start=0xa12000 p_end=0x1c68000
Starting node #0 with APIC ID 0
Mapping kernel window is done
warning: TSC frequency too high (9 retries remaining)
Apic Khz 1746, TSC Mhz 1000509, ratio 1
Booting all finished, dropped to user space

UX/RT version 0.0.1
proc: ------------- bootinfo -------------
proc: bootinfo.empty.start = 4818
proc: bootinfo.empty.end = 524288
proc: bootinfo.userImageFrames.start = 27
proc: bootinfo.userImageFrames.end = 4721
proc: bootinfo.untyped.start = 4721
proc: bootinfo.untyped.end = 4818
proc: bootinfo.untypedList
proc:   length = 97
proc:   [0 | 4721] paddr = 0x100000 - size_bits = 20 - is_device = 0
proc:   [1 | 4722] paddr = 0x200000 - size_bits = 21 - is_device = 0
proc:   [2 | 4723] paddr = 0x400000 - size_bits = 22 - is_device = 0
proc:   [3 | 4724] paddr = 0x3000000 - size_bits = 24 - is_device = 0
proc:   [4 | 4725] paddr = 0x4000000 - size_bits = 26 - is_device = 0
proc:   [5 | 4726] paddr = 0x8000000 - size_bits = 27 - is_device = 0
proc:   [6 | 4727] paddr = 0x10000000 - size_bits = 27 - is_device = 0
proc:   [7 | 4728] paddr = 0x18000000 - size_bits = 26 - is_device = 0
proc:   [8 | 4729] paddr = 0x1C000000 - size_bits = 25 - is_device = 0
proc:   [9 | 4730] paddr = 0x1E000000 - size_bits = 24 - is_device = 0
proc:   [10 | 4731] paddr = 0x1F000000 - size_bits = 23 - is_device = 0
proc:   [11 | 4732] paddr = 0x1F800000 - size_bits = 22 - is_device = 0
proc:   [12 | 4733] paddr = 0x1FC00000 - size_bits = 21 - is_device = 0
proc:   [13 | 4734] paddr = 0x1FE00000 - size_bits = 20 - is_device = 0
proc:   [14 | 4735] paddr = 0x1FF00000 - size_bits = 19 - is_device = 0
proc:   [15 | 4736] paddr = 0x1FF80000 - size_bits = 18 - is_device = 0
proc:   [16 | 4737] paddr = 0x1FFC0000 - size_bits = 17 - is_device = 0
proc:   [17 | 4738] paddr = 0x1C68800 - size_bits = 11 - is_device = 0
proc:   [18 | 4739] paddr = 0x1C69000 - size_bits = 12 - is_device = 0
proc:   [19 | 4740] paddr = 0x1C6A000 - size_bits = 13 - is_device = 0
proc:   [20 | 4741] paddr = 0x1C6C000 - size_bits = 14 - is_device = 0
proc:   [21 | 4742] paddr = 0x1C70000 - size_bits = 16 - is_device = 0
proc:   [22 | 4743] paddr = 0x1C80000 - size_bits = 19 - is_device = 0
proc:   [23 | 4744] paddr = 0x1D00000 - size_bits = 20 - is_device = 0
proc:   [24 | 4745] paddr = 0x1E00000 - size_bits = 20 - is_device = 0
proc:   [25 | 4746] paddr = 0x1F00000 - size_bits = 19 - is_device = 0
proc:   [26 | 4747] paddr = 0x1F80000 - size_bits = 18 - is_device = 0
proc:   [27 | 4748] paddr = 0x1FC0000 - size_bits = 17 - is_device = 0
proc:   [28 | 4749] paddr = 0x1FE0000 - size_bits = 15 - is_device = 0
proc:   [29 | 4750] paddr = 0x1FE8000 - size_bits = 14 - is_device = 0
proc:   [30 | 4751] paddr = 0x1FEC000 - size_bits = 10 - is_device = 0
proc:   [31 | 4752] paddr = 0x1FEC400 - size_bits = 9 - is_device = 0
proc:   [32 | 4753] paddr = 0x0 - size_bits = 20 - is_device = 1
proc:   [33 | 4754] paddr = 0x1FFE0000 - size_bits = 17 - is_device = 1
proc:   [34 | 4755] paddr = 0x20000000 - size_bits = 29 - is_device = 1
proc:   [35 | 4756] paddr = 0x40000000 - size_bits = 30 - is_device = 1
proc:   [36 | 4757] paddr = 0x80000000 - size_bits = 30 - is_device = 1
proc:   [37 | 4758] paddr = 0xC0000000 - size_bits = 29 - is_device = 1
proc:   [38 | 4759] paddr = 0xE0000000 - size_bits = 28 - is_device = 1
proc:   [39 | 4760] paddr = 0xF0000000 - size_bits = 27 - is_device = 1
proc:   [40 | 4761] paddr = 0xF8000000 - size_bits = 26 - is_device = 1
proc:   [41 | 4762] paddr = 0xFC000000 - size_bits = 25 - is_device = 1
proc:   [42 | 4763] paddr = 0xFE000000 - size_bits = 23 - is_device = 1
proc:   [43 | 4764] paddr = 0xFE800000 - size_bits = 22 - is_device = 1
proc:   [44 | 4765] paddr = 0xFEC01000 - size_bits = 12 - is_device = 1
proc:   [45 | 4766] paddr = 0xFEC02000 - size_bits = 13 - is_device = 1
proc:   [46 | 4767] paddr = 0xFEC04000 - size_bits = 14 - is_device = 1
proc:   [47 | 4768] paddr = 0xFEC08000 - size_bits = 15 - is_device = 1
proc:   [48 | 4769] paddr = 0xFEC10000 - size_bits = 16 - is_device = 1
proc:   [49 | 4770] paddr = 0xFEC20000 - size_bits = 17 - is_device = 1
proc:   [50 | 4771] paddr = 0xFEC40000 - size_bits = 18 - is_device = 1
proc:   [51 | 4772] paddr = 0xFEC80000 - size_bits = 19 - is_device = 1
proc:   [52 | 4773] paddr = 0xFED00000 - size_bits = 20 - is_device = 1
proc:   [53 | 4774] paddr = 0xFEE01000 - size_bits = 12 - is_device = 1
proc:   [54 | 4775] paddr = 0xFEE02000 - size_bits = 13 - is_device = 1
proc:   [55 | 4776] paddr = 0xFEE04000 - size_bits = 14 - is_device = 1
proc:   [56 | 4777] paddr = 0xFEE08000 - size_bits = 15 - is_device = 1
proc:   [57 | 4778] paddr = 0xFEE10000 - size_bits = 16 - is_device = 1
proc:   [58 | 4779] paddr = 0xFEE20000 - size_bits = 17 - is_device = 1
proc:   [59 | 4780] paddr = 0xFEE40000 - size_bits = 18 - is_device = 1
proc:   [60 | 4781] paddr = 0xFEE80000 - size_bits = 19 - is_device = 1
proc:   [61 | 4782] paddr = 0xFEF00000 - size_bits = 20 - is_device = 1
proc:   [62 | 4783] paddr = 0xFF000000 - size_bits = 23 - is_device = 1
proc:   [63 | 4784] paddr = 0xFF800000 - size_bits = 22 - is_device = 1
proc:   [64 | 4785] paddr = 0xFFC00000 - size_bits = 21 - is_device = 1
proc:   [65 | 4786] paddr = 0xFFE00000 - size_bits = 20 - is_device = 1
proc:   [66 | 4787] paddr = 0xFFF00000 - size_bits = 19 - is_device = 1
proc:   [67 | 4788] paddr = 0xFFF80000 - size_bits = 18 - is_device = 1
proc:   [68 | 4789] paddr = 0xFFFC0000 - size_bits = 17 - is_device = 1
proc:   [69 | 4790] paddr = 0xFFFE0000 - size_bits = 16 - is_device = 1
proc:   [70 | 4791] paddr = 0xFFFF0000 - size_bits = 15 - is_device = 1
proc:   [71 | 4792] paddr = 0xFFFF8000 - size_bits = 14 - is_device = 1
proc:   [72 | 4793] paddr = 0xFFFFC000 - size_bits = 13 - is_device = 1
proc:   [73 | 4794] paddr = 0xFFFFE000 - size_bits = 12 - is_device = 1
proc:   [74 | 4795] paddr = 0xFFFFF000 - size_bits = 11 - is_device = 1
proc:   [75 | 4796] paddr = 0xFFFFF800 - size_bits = 10 - is_device = 1
proc:   [76 | 4797] paddr = 0xFFFFFC00 - size_bits = 9 - is_device = 1
proc:   [77 | 4798] paddr = 0xFFFFFE00 - size_bits = 8 - is_device = 1
proc:   [78 | 4799] paddr = 0xFFFFFF00 - size_bits = 7 - is_device = 1
proc:   [79 | 4800] paddr = 0xFFFFFF80 - size_bits = 6 - is_device = 1
proc:   [80 | 4801] paddr = 0xFFFFFFC0 - size_bits = 5 - is_device = 1
proc:   [81 | 4802] paddr = 0xFFFFFFE0 - size_bits = 4 - is_device = 1
proc:   [82 | 4803] paddr = 0x100000000 - size_bits = 32 - is_device = 1
proc:   [83 | 4804] paddr = 0x200000000 - size_bits = 33 - is_device = 1
proc:   [84 | 4805] paddr = 0x400000000 - size_bits = 34 - is_device = 1
proc:   [85 | 4806] paddr = 0x800000000 - size_bits = 35 - is_device = 1
proc:   [86 | 4807] paddr = 0x1000000000 - size_bits = 36 - is_device = 1
proc:   [87 | 4808] paddr = 0x2000000000 - size_bits = 37 - is_device = 1
proc:   [88 | 4809] paddr = 0x4000000000 - size_bits = 38 - is_device = 1
proc:   [89 | 4810] paddr = 0x8000000000 - size_bits = 46 - is_device = 1
proc:   [90 | 4811] paddr = 0x408000000000 - size_bits = 45 - is_device = 1
proc:   [91 | 4812] paddr = 0x608000000000 - size_bits = 44 - is_device = 1
proc:   [92 | 4813] paddr = 0x708000000000 - size_bits = 43 - is_device = 1
proc:   [93 | 4814] paddr = 0x788000000000 - size_bits = 42 - is_device = 1
proc:   [94 | 4815] paddr = 0x7C8000000000 - size_bits = 41 - is_device = 1
proc:   [95 | 4816] paddr = 0x7E8000000000 - size_bits = 40 - is_device = 1
proc:   [96 | 4817] paddr = 0x7F8000000000 - size_bits = 39 - is_device = 1
proc: bootinfo.extraLen = 4096
proc: multiboot:
proc: mbi_vaddr: 1655000
proc: mbi_paddr: 1c67000
proc: kernel command line: /boot/generic/kernel
proc: fs_start_addr: 1647000
proc: fs_end_addr: 1655000
proc: multiboot modules:
proc: ---
proc: name: /test.txt
proc: start paddr: 1c65000
proc: end paddr: 1c6502b
proc: start vaddr: 1653000
proc: end vaddr: 165302b
proc: -
proc: ---
proc: --------------------------

Before NewBlock..*****
Found thread has no fault handler while trying to handle:
vm fault on data at address 0x100 with status 0x4
in thread 0xffffff8001c68400 "rootserver" at address 0x413acd
With stack:
0x644ed0: 0x64a039
0x644ed8: 0x100
0x644ee0: 0x100
0x644ee8: 0x413e93
0x644ef0: 0x100
0x644ef8: 0x64a030
0x644f00: 0x100
0x644f08: 0x413f72
0x644f10: 0x64a081
0x644f18: 0x413ca7
0x644f20: 0x100
0x644f28: 0x64a030
0x644f30: 0x64a030
0x644f38: 0x4146bb
0x644f40: 0x8
0x644f48: 0x41332b
aditya@aditya:~/uxrt-toplevel$ 


*******************************************************
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4286578688, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4290772992, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4292870144, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4293918720, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294443008, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294705152, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294836224, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294901760, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294934528, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294950912, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294959104, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294963200, padding1: 0, padding2: 0, sizeBits: 11, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294965248, padding1: 0, padding2: 0, sizeBits: 10, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966272, padding1: 0, padding2: 0, sizeBits: 9, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966784, padding1: 0, padding2: 0, sizeBits: 8, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967040, padding1: 0, padding2: 0, sizeBits: 7, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967168, padding1: 0, padding2: 0, sizeBits: 6, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967232, padding1: 0, padding2: 0, sizeBits: 5, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967264, padding1: 0, padding2: 0, sizeBits: 4, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967296, padding1: 0, padding2: 0, sizeBits: 32, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 8589934592, padding1: 0, padding2: 0, sizeBits: 33, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 17179869184, padding1: 0, padding2: 0, sizeBits: 34, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 34359738368, padding1: 0, padding2: 0, sizeBits: 35, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 68719476736, padding1: 0, padding2: 0, sizeBits: 36, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 137438953472, padding1: 0, padding2: 0, sizeBits: 37, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 274877906944, padding1: 0, padding2: 0, sizeBits: 38, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 549755813888, padding1: 0, padding2: 0, sizeBits: 46, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 70918499991552, padding1: 0, padding2: 0, sizeBits: 45, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 106102872080384, padding1: 0, padding2: 0, sizeBits: 44, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 123695058124800, padding1: 0, padding2: 0, sizeBits: 43, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 132491151147008, padding1: 0, padding2: 0, sizeBits: 42, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 136889197658112, padding1: 0, padding2: 0, sizeBits: 41, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 139088220913664, padding1: 0, padding2: 0, sizeBits: 40, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 140187732541440, padding1: 0, padding2: 0, sizeBits: 39, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 0, padding1: 0, padding2: 0, sizeBits: 0, isDevice: 0} <repeats 133 times>]
(gdb) !clear

(gdb) p bootinfo.untypedList 
$7 = [sel4_sys::lib_main::seL4_UntypedDesc {paddr: 1048576, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 2097152, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4194304, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 50331648, padding1: 0, padding2: 0, sizeBits: 24, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 67108864, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 134217728, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 268435456, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 402653184, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 469762048, padding1: 0, padding2: 0, sizeBits: 25, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 503316480, padding1: 0, padding2: 0, sizeBits: 24, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 520093696, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 528482304, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 532676608, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 534773760, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 535822336, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536346624, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536608768, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29788160, padding1: 0, padding2: 0, sizeBits: 11, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29790208, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29794304, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29802496, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29818880, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 29884416, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 30408704, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 31457280, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 32505856, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33030144, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33292288, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33423360, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33456128, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33472512, padding1: 0, padding2: 0, sizeBits: 10, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 33473536, padding1: 0, padding2: 0, sizeBits: 9, isDevice: 0}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 0, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536739840, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 536870912, padding1: 0, padding2: 0, sizeBits: 29, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 1073741824, padding1: 0, padding2: 0, sizeBits: 30, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 2147483648, padding1: 0, padding2: 0, sizeBits: 30, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 3221225472, padding1: 0, padding2: 0, sizeBits: 29, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 3758096384, padding1: 0, padding2: 0, sizeBits: 28, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4026531840, padding1: 0, padding2: 0, sizeBits: 27, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4160749568, padding1: 0, padding2: 0, sizeBits: 26, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4227858432, padding1: 0, padding2: 0, sizeBits: 25, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4261412864, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4269801472, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4273999872, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274003968, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274012160, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274028544, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274061312, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274126848, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274257920, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4274520064, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4275044352, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276097024, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276101120, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276109312, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276125696, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276158464, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276224000, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276355072, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4276617216, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4277141504, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4278190080, padding1: 0, padding2: 0, sizeBits: 23, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4286578688, padding1: 0, padding2: 0, sizeBits: 22, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4290772992, padding1: 0, padding2: 0, sizeBits: 21, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4292870144, padding1: 0, padding2: 0, sizeBits: 20, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4293918720, padding1: 0, padding2: 0, sizeBits: 19, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294443008, padding1: 0, padding2: 0, sizeBits: 18, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294705152, padding1: 0, padding2: 0, sizeBits: 17, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294836224, padding1: 0, padding2: 0, sizeBits: 16, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294901760, padding1: 0, padding2: 0, sizeBits: 15, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294934528, padding1: 0, padding2: 0, sizeBits: 14, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294950912, padding1: 0, padding2: 0, sizeBits: 13, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294959104, padding1: 0, padding2: 0, sizeBits: 12, isDevice: 1}, 
---Type <return> to continue, or q <return> to quit---
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294963200, padding1: 0, padding2: 0, sizeBits: 11, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294965248, padding1: 0, padding2: 0, sizeBits: 10, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966272, padding1: 0, padding2: 0, sizeBits: 9, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294966784, padding1: 0, padding2: 0, sizeBits: 8, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967040, padding1: 0, padding2: 0, sizeBits: 7, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967168, padding1: 0, padding2: 0, sizeBits: 6, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967232, padding1: 0, padding2: 0, sizeBits: 5, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967264, padding1: 0, padding2: 0, sizeBits: 4, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 4294967296, padding1: 0, padding2: 0, sizeBits: 32, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 8589934592, padding1: 0, padding2: 0, sizeBits: 33, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 17179869184, padding1: 0, padding2: 0, sizeBits: 34, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 34359738368, padding1: 0, padding2: 0, sizeBits: 35, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 68719476736, padding1: 0, padding2: 0, sizeBits: 36, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 137438953472, padding1: 0, padding2: 0, sizeBits: 37, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 274877906944, padding1: 0, padding2: 0, sizeBits: 38, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 549755813888, padding1: 0, padding2: 0, sizeBits: 46, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 70918499991552, padding1: 0, padding2: 0, sizeBits: 45, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 106102872080384, padding1: 0, padding2: 0, sizeBits: 44, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 123695058124800, padding1: 0, padding2: 0, sizeBits: 43, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 132491151147008, padding1: 0, padding2: 0, sizeBits: 42, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 136889197658112, padding1: 0, padding2: 0, sizeBits: 41, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 139088220913664, padding1: 0, padding2: 0, sizeBits: 40, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 140187732541440, padding1: 0, padding2: 0, sizeBits: 39, isDevice: 1}, 
  sel4_sys::lib_main::seL4_UntypedDesc {paddr: 0, padding1: 0, padding2: 0, sizeBits: 0, isDevice: 0} <repeats 133 times>]
(gdb) n
175				bootinfo.untypedList[index].paddr,
(gdb) n
176				bootinfo.untypedList[index].sizeBits,
(gdb) n
177				bootinfo.untypedList[index].isDevice
(gdb) n
171			log_msg!(LogLevel::Info,
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) n
175				bootinfo.untypedList[index].paddr,
(gdb) n
176				bootinfo.untypedList[index].sizeBits,
(gdb) n
177				bootinfo.untypedList[index].isDevice
(gdb) n
171			log_msg!(LogLevel::Info,
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 



Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 



Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000) at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) p i
$8 = 4735
(gdb) 
$9 = 4735
(gdb) 
$10 = 4735
(gdb) 
$11 = 4735
(gdb) 
$12 = 4735
(gdb) 
$13 = 4735
(gdb) 
$14 = 4735
(gdb) 
$15 = 4735
(gdb) 
$16 = 4735
(gdb) 
$17 = 4735
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$18 = 4739
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) p i
$19 = 4743
(gdb) n
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) p i
No symbol 'i' in current context
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$20 = 4748
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$21 = 4751
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) p i
No symbol 'i' in current context
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$22 = 4752
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$23 = 4752
(gdb) n
175				bootinfo.untypedList[index].paddr,
(gdb) p i
$24 = 4752
(gdb) p boo
bool              bootinfo.rs       bootstrap.rs      
bootinfo          bootinfo_types.h  
(gdb) p bootinfo.untyped.
end    start  
(gdb) p index 
$25 = 31
(gdb) n
176				bootinfo.untypedList[index].sizeBits,
(gdb) p boo
bool              bootinfo.rs       bootstrap.rs      
bootinfo          bootinfo_types.h  
(gdb) n
177				bootinfo.untypedList[index].isDevice
(gdb) n
171			log_msg!(LogLevel::Info,
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) n

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) p i
No symbol 'i' in current context
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) p i
$26 = 4753
(gdb) p index
No symbol 'index' in current context
(gdb) n
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) n
175				bootinfo.untypedList[index].paddr,
(gdb) p index 
$27 = 32
(gdb) n
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 








Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 

171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 

171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 

171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 

171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 

171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 

Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 




Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 

176				bootinfo.untypedList[index].sizeBits,
(gdb) 
177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 


Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 

170			let index: usize = (i - bootinfo.untyped.start) as usize;
(gdb) 
175				bootinfo.untypedList[index].paddr,
(gdb) 
176				bootinfo.untypedList[index].sizeBits,
(gdb) 

177				bootinfo.untypedList[index].isDevice
(gdb) 
171			log_msg!(LogLevel::Info,
(gdb) 





Breakpoint 3, uxrt_process_server::process_bootinfo (bootinfo=0x1657000)
    at src/lib.rs:169
169		for i in bootinfo.untyped.start..bootinfo.untyped.end {
(gdb) 
180		log_msg!(LogLevel::Info, "bootinfo.extraLen = {}", bootinfo.extraLen);
(gdb) 

180		log_msg!(LogLevel::Info, "bootinfo.extraLen = {}", bootinfo.extraLen);
(gdb) 

182		let bootinfo_iter = unsafe { sel4::bootinfo_extras(bootinfo) };
(gdb) 
183		let mut mbi_header = None;
(gdb) 
185		for header in bootinfo_iter {
(gdb) 


187				sel4::BootInfoExtra::X86_mbi2_pt(mbi) => { mbi_header = Some(mbi)},
(gdb) 
185		for header in bootinfo_iter {
(gdb) 

187				sel4::BootInfoExtra::X86_mbi2_pt(mbi) => { mbi_header = Some(mbi)},
(gdb) 
185		for header in bootinfo_iter {
(gdb) p index 
No symbol 'index' in current context
(gdb) p header
No symbol 'header' in current context
(gdb) p boo
bool              bootinfo.rs       bootinfo_types.h  
bootinfo          bootinfo_iter     bootstrap.rs      
(gdb) p bootinfo_iter 
$28 = sel4::bootinfo::BootInfoExtraIter {first_ptr: 0x1658000, num_bytes: 4096}
(gdb) s
<sel4::bootinfo::BootInfoExtraIter as core::iter::traits::iterator::Iterator>::next (self=0x645db0)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/rust-sel4/src/bootinfo.rs:163
163	        while self.num_bytes > 0 {
(gdb) bt
#0  <sel4::bootinfo::BootInfoExtraIter as core::iter::traits::iterator::Iterator>::next (self=0x645db0)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/rust-sel4/src/bootinfo.rs:163
#1  0x0000000000402cba in uxrt_process_server::process_bootinfo (
    bootinfo=0x1657000) at src/lib.rs:185
#2  0x0000000000402faa in uxrt_process_server::main (bootinfo=0x1657000)
    at src/lib.rs:206
#3  0x0000000000400535 in root_task::main () at src/bin/root-task.rs:216
(gdb) n
164	            let (id, len) = unsafe { ((*self.first_ptr).id, (*self.first_ptr).len) };
(gdb) b bootinfo.rs:163
Breakpoint 5 at 0x41769c: file /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/rust-sel4/src/bootinfo.rs, line 163.
(gdb) n
165	            self.num_bytes -= len;
(gdb) n
166	            let ptr = self.first_ptr;
(gdb) n
167	            self.first_ptr = ((self.first_ptr as usize) + len as usize) as *mut sel4_sys::seL4_BootInfoHeader;
(gdb) n
168	            match id as u32 {
(gdb) n
169	                sel4_sys::SEL4_BOOTINFO_HEADER_PADDING => {},
(gdb) n
163	        while self.num_bytes > 0 {
(gdb) n

Breakpoint 5, <sel4::bootinfo::BootInfoExtraIter as core::iter::traits::iterator::Iterator>::next (self=0x645db0)
    at /home/aditya/uxrt-toplevel/packages/core-supervisor/fel4/rust-sel4/src/bootinfo.rs:163
163	        while self.num_bytes > 0 {
(gdb) 

